@page
@model IndexModel
@{
    ViewData["Title"] = "Main Screen";
}

<div class="text-center">
    <h1 class="display-4">Lyrical Learning</h1>
    <h2>The home of easy language learning by song!</h2>
    <input id="searchInput" type="text" class="form-control mb-3" placeholder="Search tiles...">
    
    <div id="tileContainer" class="d-flex flex-wrap justify-content-center gap-3">
        <!-- Song tiles loaded here -->
    </div>
</div>

<div id="popup" style="display:none; position:fixed; top:20%; left:50%; transform:translateX(-50%); background:white; border:1px solid #ccc; padding:2rem; border-radius:12px; box-shadow:0 4px 10px rgba(0,0,0,0.2); z-index:1000;">
    <div id="popupContent"></div>
</div>

@section Scripts {
    <script>
        const footer = document.querySelector('footer');
        if (footer) {
            footer.style.paddingTop = '1px';
            footer.style.paddingBottom = '1px';
            footer.style.lineHeight = "5vh"
        }
        document.addEventListener("DOMContentLoaded", function () {
            // Fetch the list of songs on page load
            fetch('/api/songs')
                .then(response => response.json())
                .then(songs => {
                    const tileContainer = document.getElementById('tileContainer');
                    songs.forEach(song => {
                        const tile = document.createElement('button');
                        tile.className = 'tile card p-3';
                        tile.dataset.songID = song.id.toString();
                        tile.dataset.title = song.title;
                        tile.style.textDecoration = 'none';
                        tile.style.color = '#000';
                        tile.style.backgroundColor = '#f9f9f9';
                        tile.style.border = '1px solid #ccc';
                        tile.style.minWidth = '200px';
                        tile.style.borderRadius = '12px';
                        tile.style.boxShadow = '0 2px 6px rgba(0,0,0,0.1)';
                        tile.style.cursor = 'pointer';
                        tile.style.textAlign = 'center';
                        tile.innerHTML = `<h3>${song.title}</h3>`;
                        tileContainer.appendChild(tile);

                        tile.addEventListener('click', () => {
                            const songId = tile.dataset.songID;
                            const title = tile.dataset.title;
                            openPopupWithSong(songId, title);
                        });
                    });
                })
                .catch(error => console.error('Error fetching songs:', error));
        });

        searchInput.addEventListener('input', function () {
            const searchTerm = this.value.toLowerCase();
            const tiles = document.querySelectorAll('.tile');

            tiles.forEach(tile => {
                const title = tile.dataset.title.toLowerCase();
                tile.style.display = title.includes(searchTerm) ? 'block' : 'none';
                });
            });
        
        function openPopupWithSong(id, title) {
            popup = document.getElementById("popup")
            popupText = document.getElementById("popupContent")

            popupText.innerHTML = `
                <h1>${title}</h1>
                <h2>How would you like to start learning?</h2>
                <button onclick="window.location.href = '/Song/${id}?mode=words'">Learn By Words</button>
                <button onclick="window.location.href = '/Song/${id}?mode=sentences'">Learn By Sentences</button>
                <button onclick="window.location.href = '/Song/${id}?mode=paragraph'">Learn By Paragraphs</button>
            `;

            popup.style.display = 'block';
        }

    </script>
}